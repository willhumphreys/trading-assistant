spring.datasource.url=${DATABASE_URL}
spring.datasource.username=metatrader
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.hikari.maxLifeTime=600000
spring.liquibase.enabled=true
spring.liquibase.drop-first=false
spring.liquibase.change-log=classpath:db/changelog/changelog-master.xml
spring.liquibase.default-schema=metatrader
spring.jpa.open-in-view=true
spring.devtools.restart.enabled=false
spring.profiles.active=prod
spring.application.name=trading-assistant
management.metrics.tags.application=${spring.application.name}
management.endpoints.web.exposure.include=info,prometheus,health,metrics
management.atlas.metrics.export.enabled=false
#logging.level.liquibase=DEBUG
#logging.level.web=DEBUG
spring.jpa.show-sql=false
sleep-delay=1000
setup-limit=5
max-retry-command-seconds=30
accounts-dir=accounts
slack.webhook.url=${SLACK_WEBHOOK_URL}
slack.webhook.enabled=true
run-on-startup=true
logging.file.path=logs

# Consumer configuration
spring.kafka.consumer.bootstrap-servers=192.168.1.245:9094,192.168.1.246:9094,192.168.1.247:9094
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=test-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="user1" password="EHepd6DF1p";
spring.kafka.consumer.properties.security.protocol=SASL_PLAINTEXT
spring.kafka.consumer.properties.sasl.mechanism=SCRAM-SHA-256

# Kafka Consumer Configuration
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=uk.co.threebugs.darwinexclient.metatrader
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=uk.co.threebugs.darwinexclient.metatrader.Orders
# Error handling deserializer for wrapping the JsonDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
info.app.version=${project.version}

