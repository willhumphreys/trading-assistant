name: backend-maven-build

on:
  push:
    branches: [ main ]
    paths:
      - backend/**
  pull_request:
    branches: [ main ]
    paths:
      - backend/**
  workflow_dispatch:
permissions: write-all
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

#      - name: Quick build
#        run: mvn -B install -DskipTests -Dprofile.active=shorttest --file pom.xml
      - name: Build with Maven shorttest
        run: mvn -B verify -Dprofile.active=shorttest --file pom.xml
      - name: Build with Maven longtest
        run: mvn -B verify -Dprofile.active=longtest --file pom.xml
      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: trading-assistant-backend-jar
          path: backend/target/trading-assistant-backend-0.0.1-SNAPSHOT.jar
          if-no-files-found: error
  release:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4
      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: trading-assistant-backend-jar
          path: target
      - name: Create Release and Upload JAR
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/trading-assistant-backend-0.0.1-SNAPSHOT.jar
            backend/scripts/start-server.py
            backend/scripts/start-windows-both.sh
          draft: false
          prerelease: false
          tag_name: "release-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}"
          name: Release ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}

  build-docker-image-ecr:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: trading-assistant-backend-jar
          path: backend/target
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::573591465159:role/gitHubDeployRole
          aws-region: eu-central-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: trading-assistant
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest -f backend/Dockerfile backend
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest
  build-docker-image-ghcr:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: trading-assistant-backend-jar
          path: backend/target
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build, tag, and push docker image to GitHub Packages
        env:
          GHCR_REGISTRY: ghcr.io
          GHCR_REPOSITORY: willhumphreys/trading-assistant  # Replace 'username' with your GitHub username or org name
          IMAGE_TAG: backend-${{ github.sha }}
        run: |
          docker build -t $GHCR_REGISTRY/$GHCR_REPOSITORY:$IMAGE_TAG -t $GHCR_REGISTRY/$GHCR_REPOSITORY:backend-latest -f backend/Dockerfile backend
          docker push $GHCR_REGISTRY/$GHCR_REPOSITORY:$IMAGE_TAG
          docker push $GHCR_REGISTRY/$GHCR_REPOSITORY:backend-latest